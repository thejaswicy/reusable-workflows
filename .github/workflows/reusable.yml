name: Reusable workflow example

on:
  workflow_call:
    inputs:
      issue-number:
        description: issue that triggerd the workflow
        required: true
        type: string
      repo-owner:
        description: repo owner
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  ISSUE_NUMBER: ${{ inputs.issue-number }}
  REPO_OWNER: ${{ inputs.repo-owner }}

jobs:
  setup:
    name: Repository-Setup
    runs-on: ubuntu-latest
    outputs:
      REPOSITORY_NAME: ${{ steps.repo-names.outputs.REPOSITORY_NAME }}
      TEMPLATE_REPO_NAME: ${{ steps.repo-names.outputs.TEMPLATE_REPO_NAME }}
    defaults:
      run:
        shell: bash

    if: ${{ github.event.issue.title == 'create {repository} repo, using template' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        id: checkout
        with:
          fetch-depth: 0

      - name: Parse issue body
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/repository-request.yml

      - name: Get repo details
        id: repo-names
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}' > issue.json
          echo "REPOSITORY_NAME=$(jq -r '.repo' issue.json)" >> "$GITHUB_OUTPUT"
          echo "TEMPLATE_REPO_NAME=$(jq -r '."template"' issue.json)" >> "$GITHUB_OUTPUT"
          echo "$REPOSITORY_NAME"
        env:
          REPOSITORY_NAME: ${{ steps.repo-names.outputs.REPOSITORY_NAME }}
          TEMPLATE_REPO_NAME: ${{ steps.repo-names.outputs.TEMPLATE_REPO_NAME }}

      - name: Check if repository exists
        id: check-repo
        run: |
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${REPO_OWNER}/${REPOSITORY_NAME})
          if [ "$HTTP_STATUS" == "200" ]; then
            echo "Repository already exists. Please change the name of the New Repository in the issue and re-open the issue."
            exit 1
          fi

      - name: Update Issue Title
        run: |
          gh issue edit ${{ env.ISSUE_NUMBER }} --title "chore: create ${REPOSITORY_NAME} repository, using ${TEMPLATE_REPO_NAME} repository"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}

  create-repository:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:

      - name: Create new repository
        run: |
          CREATE_REPO=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${REPO_OWNER}/${TEMPLATE_REPO_NAME}/generate" \
            -d "{\"owner\":\"${REPO_OWNER}\",\"name\":\"${REPOSITORY_NAME}\",\"include_all_branches\":false,\"private\":false}")
          echo "Created repository ${REPOSITORY_NAME} in ${REPO_OWNER}"
